// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Details should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Details />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="banner"
        >
          <Link
            className="header-a"
            to="/translations"
          >
            Return to Translations
          </Link>
          <Link
            className="header-a"
            to="/"
          >
            Translate to French.
          </Link>
        </div>,
        <div
          className="details-field"
        >
          <section
            className="left"
          >
            <h1>
              Français
            </h1>
          </section>
          <section
            className="right"
          >
            <h1>
              English
            </h1>
          </section>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="header-a"
              to="/translations"
            >
              Return to Translations
            </Link>,
            <Link
              className="header-a"
              to="/"
            >
              Translate to French.
            </Link>,
          ],
          "className": "banner",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Return to Translations",
              "className": "header-a",
              "to": "/translations",
            },
            "ref": null,
            "rendered": "Return to Translations",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Translate to French.",
              "className": "header-a",
              "to": "/",
            },
            "ref": null,
            "rendered": "Translate to French.",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <section
              className="left"
            >
              <h1>
                Français
              </h1>
            </section>,
            <section
              className="right"
            >
              <h1>
                English
              </h1>
            </section>,
          ],
          "className": "details-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Français
                </h1>,
                undefined,
              ],
              "className": "left",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Français",
                },
                "ref": null,
                "rendered": "Français",
                "type": "h1",
              },
              undefined,
            ],
            "type": "section",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  English
                </h1>,
                undefined,
              ],
              "className": "right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "English",
                },
                "ref": null,
                "rendered": "English",
                "type": "h1",
              },
              undefined,
            ],
            "type": "section",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="banner"
          >
            <Link
              className="header-a"
              to="/translations"
            >
              Return to Translations
            </Link>
            <Link
              className="header-a"
              to="/"
            >
              Translate to French.
            </Link>
          </div>,
          <div
            className="details-field"
          >
            <section
              className="left"
            >
              <h1>
                Français
              </h1>
            </section>
            <section
              className="right"
            >
              <h1>
                English
              </h1>
            </section>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="header-a"
                to="/translations"
              >
                Return to Translations
              </Link>,
              <Link
                className="header-a"
                to="/"
              >
                Translate to French.
              </Link>,
            ],
            "className": "banner",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Return to Translations",
                "className": "header-a",
                "to": "/translations",
              },
              "ref": null,
              "rendered": "Return to Translations",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Translate to French.",
                "className": "header-a",
                "to": "/",
              },
              "ref": null,
              "rendered": "Translate to French.",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <section
                className="left"
              >
                <h1>
                  Français
                </h1>
              </section>,
              <section
                className="right"
              >
                <h1>
                  English
                </h1>
              </section>,
            ],
            "className": "details-field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Français
                  </h1>,
                  undefined,
                ],
                "className": "left",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Français",
                  },
                  "ref": null,
                  "rendered": "Français",
                  "type": "h1",
                },
                undefined,
              ],
              "type": "section",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    English
                  </h1>,
                  undefined,
                ],
                "className": "right",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "English",
                  },
                  "ref": null,
                  "rendered": "English",
                  "type": "h1",
                },
                undefined,
              ],
              "type": "section",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
